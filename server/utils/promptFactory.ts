import { convert } from 'html-to-text'

// Gi·∫£ ƒë·ªãnh h√†m n√†y s·∫Ω ƒë∆∞·ª£c g·ªçi v·ªõi ƒë·∫ßy ƒë·ªß d·ªØ li·ªáu c·∫ßn thi·∫øt
async function createChapterOutlinePrompt(context): Promise<string> {
  const {
    story, // object ch·ª©a summary v√† settings
    lorebookContext, // m·ªôt chu·ªói t√≥m t·∫Øt c√°c nh√¢n v·∫≠t, th·∫ø l·ª±c li√™n quan
    prevChapterSummary,
    prevChapterEndingText, // v√†i trƒÉm t·ª´ cu·ªëi c·ªßa ch∆∞∆°ng tr∆∞·ªõc
    chapterIdea
  } = context

  const metaPrompt = `
      QUAN TR·ªåNG: H√ÉY VI·∫æT C√ÇU TR·∫¢ L·ªúI HO√ÄN TO√ÄN B·∫∞NG TI·∫æNG VI·ªÜT.

      <VAI_TR√í>
      B·∫°n l√† m·ªôt AI chuy√™n gia x√¢y d·ª±ng d√†n √Ω ch∆∞∆°ng truy·ªán, c√≥ kh·∫£ nƒÉng ph√¢n t√≠ch b·ªëi c·∫£nh s√¢u s·∫Øc v√† s√°ng t·∫°o ra nh·ªØng t√¨nh ti·∫øt h·∫•p d·∫´n, logic, v√† k·∫øt n·ªëi ch·∫∑t ch·∫Ω v·ªõi m·∫°ch truy·ªán t·ªïng th·ªÉ.
      </VAI_TR√í>

      <TH√îNG_TIN_TRUY·ªÜN>
      - T√≥m t·∫Øt c·ªët truy·ªán ch√≠nh: ${story?.summary || 'Ch∆∞a c√≥'}
      - Phong c√°ch & Gi·ªçng ƒëi·ªáu chung: ${story?.settings?.writingStyle || 'Ch∆∞a x√°c ƒë·ªãnh'}, gi·ªçng ƒëi·ªáu ${story?.settings?.tone || 'trung t√≠nh'}.
      - B·ªëi c·∫£nh & Nh√¢n v·∫≠t li√™n quan (Lorebook): ${lorebookContext || 'Kh√¥ng c√≥ th√¥ng tin b·ªï sung.'}
      </TH√îNG_TIN_TRUY·ªÜN>

      <B·ªêI_C·∫¢NH_CH∆Ø∆†NG_TR∆Ø·ªöC>
      - T√≥m t·∫Øt ch∆∞∆°ng tr∆∞·ªõc: ${prevChapterSummary || 'ƒê√¢y l√† ch∆∞∆°ng ƒë·∫ßu ti√™n.'}
      - ƒêo·∫°n k·∫øt c·ªßa ch∆∞∆°ng tr∆∞·ªõc (ƒë·ªÉ ƒë·∫£m b·∫£o s·ª± li·ªÅn m·∫°ch):
      "...${prevChapterEndingText || 'Kh√¥ng c√≥.'}"
      </B·ªêI_C·∫¢NH_CH∆Ø∆†NG_TR∆Ø·ªöC>

      <Y√äU_C·∫¶U_C·ª¶A_T√ÅC_GI·∫¢_CHO_CH∆Ø∆†NG_N√ÄY>
      "${chapterIdea}"
      </Y√äU_C·∫¶U_C·ª¶A_T√ÅC_GI·∫¢_CHO_CH∆Ø∆†NG_N√ÄY>

      <NHI·ªÜM_V·ª§>
      D·ª±a v√†o TO√ÄN B·ªò th√¥ng tin ƒë∆∞·ª£c cung c·∫•p, h√£y t·∫°o ra m·ªôt d√†n √Ω chi ti·∫øt cho ch∆∞∆°ng truy·ªán d∆∞·ªõi d·∫°ng m·ªôt ƒë·ªëi t∆∞·ª£ng JSON DUY NH·∫§T, h·ª£p l·ªá.
      ƒê·ªëi t∆∞·ª£ng JSON ph·∫£i ch·ª©a c√°c kh√≥a sau:
      - "opening": (String) M·ªôt c√¢u m√¥ t·∫£ s√∫c t√≠ch, h·∫•p d·∫´n cho c·∫£nh m·ªü ƒë·∫ßu.
      - "development": (M·∫£ng String) M·ªôt m·∫£ng ch·ª©a 2-4 chu·ªói, m·ªói chu·ªói m√¥ t·∫£ m·ªôt b∆∞·ªõc ph√°t tri·ªÉn t√¨nh ti·∫øt ch√≠nh trong ch∆∞∆°ng. C√°c b∆∞·ªõc ph·∫£i logic v√† d·∫´n d·∫Øt ƒë·∫øn cao tr√†o.
      - "climax": (String) M·ªôt c√¢u m√¥ t·∫£ ƒëi·ªÉm cao tr√†o, n∆°i xung ƒë·ªôt ho·∫∑c cƒÉng th·∫≥ng l√™n ƒë·∫øn ƒë·ªânh ƒëi·ªÉm.
      - "ending": (String) M·ªôt c√¢u m√¥ t·∫£ c·∫£nh k·∫øt th√∫c, gi·∫£i quy·∫øt m·ªôt ph·∫ßn cao tr√†o nh∆∞ng ph·∫£i t·∫°o ra s·ª± t√≤ m√≤ ho·∫∑c g·ª£i m·ªü cho ch∆∞∆°ng ti·∫øp theo.
      </NHI·ªÜM_V·ª§>

      <V√ç_D·ª§_JSON_M·∫™U>
      {
        "opening": "Nh√¢n v·∫≠t ch√≠nh t·ªânh d·∫≠y trong m·ªôt khu r·ª´ng l·∫° l·∫´m, tr√™n tay l√† m·ªôt v·∫≠t ph·∫©m kh√¥ng r√µ ngu·ªìn g·ªëc.",
        "development": [
          "H·ªç c·ªë g·∫Øng x√°c ƒë·ªãnh ph∆∞∆°ng h∆∞·ªõng v√† ph√°t hi·ªán ra nh·ªØng d·∫•u v·∫øt k·ª≥ l·∫°, kh√¥ng gi·ªëng c·ªßa b·∫•t k·ª≥ sinh v·∫≠t n√†o t·ª´ng bi·∫øt.",
          "ƒêi theo d·∫•u v·∫øt, h·ªç t√¨m th·∫•y m·ªôt ng√¥i l√†ng b·ªã b·ªè hoang nh∆∞ng c√≥ d·∫•u hi·ªáu c·ªßa m·ªôt cu·ªôc di t·∫£n v·ªôi v√£.",
          "M·ªôt nh√¢n v·∫≠t ph·ª• b·∫•t ng·ªù xu·∫•t hi·ªán, ti·∫øt l·ªô r·∫±ng ng√¥i l√†ng ƒëang b·ªã m·ªôt th·∫ø l·ª±c b√≠ ·∫©n sƒÉn l√πng."
        ],
        "climax": "Th·∫ø l·ª±c b√≠ ·∫©n t·∫•n c√¥ng, bu·ªôc nh√¢n v·∫≠t ch√≠nh v√† ng∆∞·ªùi b·∫°n m·ªõi ph·∫£i h·ª£p s·ª©c chi·∫øn ƒë·∫•u ƒë·ªÉ sinh t·ªìn.",
        "ending": "H·ªç ƒë·∫©y l√πi ƒë∆∞·ª£c ƒë·ª£t t·∫•n c√¥ng ƒë·∫ßu ti√™n, nh∆∞ng ph√°t hi·ªán ra v·∫≠t ph·∫©m tr√™n tay nh√¢n v·∫≠t ch√≠nh ch√≠nh l√† th·ª© m√† k·∫ª ƒë·ªãch ƒëang t√¨m ki·∫øm."
      }
      </V√ç_D·ª§_JSON_M·∫™U>

      <QUY_T·∫ÆC_XU·∫§T_B·∫¢N>
      - Ch·ªâ tr·∫£ v·ªÅ duy nh·∫•t m·ªôt kh·ªëi m√£ JSON h·ª£p l·ªá.
      - KH√îNG ƒë∆∞·ª£c th√™m b·∫•t k·ª≥ vƒÉn b·∫£n gi·ªõi thi·ªáu, gi·∫£i th√≠ch n√†o tr∆∞·ªõc ho·∫∑c sau kh·ªëi JSON.
      - KH√îNG ƒë∆∞·ª£c bao b·ªçc JSON trong markdown (v√≠ d·ª•: \`\`\`json ... \`\`\`).
      </QUY_T·∫ÆC_XU·∫§T_B·∫¢N>
    `
  return metaPrompt
}

async function createStoryDetailsPrompt(job): Promise<string> {
  const { genres, settings } = job.context

  // (C·∫¢I TI·∫æN 1) T√°ch b·∫°ch c√°c ph·∫ßn th√¥ng tin b·∫±ng c√°c th·∫ª gi·ªëng XML ƒë·ªÉ LLM d·ªÖ ph√¢n bi·ªát
  const metaPrompt = `
      QUAN TR·ªåNG: H√ÉY VI·∫æT C√ÇU TR·∫¢ L·ªúI HO√ÄN TO√ÄN B·∫∞NG TI·∫æNG VI·ªÜT.

      <B·ªêI C·∫¢NH>
      B·∫°n l√† m·ªôt AI chuy√™n gia trong vi·ªác ph√¢n t√≠ch y√™u c·∫ßu v√† kh·ªüi t·∫°o c·∫•u tr√∫c d·ªØ li·ªáu cho ti·ªÉu thuy·∫øt. Vai tr√≤ c·ªßa b·∫°n l√† nh·∫≠n m·ªôt √Ω t∆∞·ªüng v√† c√°c th√¥ng s·ªë, sau ƒë√≥ tr·∫£ v·ªÅ m·ªôt c·∫•u tr√∫c JSON DUY NH·∫§T ch·ª©a b·ªô khung cho c√¢u chuy·ªán.
      </B·ªêI C·∫¢NH>

      <Y√äU C·∫¶U_NG∆Ø·ªúI_D√ôNG>
      - √ù t∆∞·ªüng ch√≠nh: "${job.prompt}"
      - Th·ªÉ lo·∫°i g·ª£i √Ω: ${genres.join(', ')}
      </Y√äU C·∫¶U_NG∆Ø·ªúI_D√ôNG>

      <TH√îNG_S·ªê_K·ª∏_THU·∫¨T>
      - C·∫•u tr√∫c vi·∫øt: ${settings.writingStructure}
      - Quy m√¥ d·ª± ki·∫øn: ${settings.chapterCount} ch∆∞∆°ng
      - S·ªë t·ª´ tr√™n m·ªói ch∆∞∆°ng (∆∞·ªõc t√≠nh): ${settings.wordsPerChapter}
      - ƒê·ªô s√¢u b·ªô nh·ªõ (tham kh·∫£o): ${settings.memoryDepth}/10
      - Phong c√°ch vi·∫øt: ${settings.writingStyle}
      - Gi·ªçng ƒëi·ªáu: ${settings.tone}
      - ƒê·ªô ph·ª©c t·∫°p ng√¥n ng·ªØ: ${settings.languageComplexity}
      - ƒê·ªô tu·ªïi m·ª•c ti√™u: ${settings.targetAgeGroup}
      - Y·∫øu t·ªë c·∫£m x√∫c ch√≠nh: ${settings.emotionalElements.join(', ') || 'Kh√¥ng c√≥'}
      - Y·∫øu t·ªë h√†i h∆∞·ªõc: ${settings.humorElements.join(', ') || 'Kh√¥ng c√≥'}
      </TH√îNG_S·ªê_K·ª∏_THU·∫¨T>

      <NHI·ªÜM_V·ª§>
      D·ª±a v√†o to√†n b·ªô th√¥ng tin tr√™n, h√£y t·∫°o ra m·ªôt c·∫•u tr√∫c JSON duy nh·∫•t, h·ª£p l·ªá.
      H√£y tu√¢n th·ªß nghi√™m ng·∫∑t ƒë·ªãnh d·∫°ng v√† c√°c y√™u c·∫ßu v·ªÅ ki·ªÉu d·ªØ li·ªáu sau:

      1. "story": m·ªôt object ch·ª©a "title" (string), "description" (string), "tags" (m·∫£ng string), "genres" (m·∫£ng string).
      2. "characters": m·ªôt m·∫£ng ch·ª©a 3-5 nh√¢n v·∫≠t quan tr·ªçng (ch√≠nh, ph·∫£n di·ªán, ph·ª•). M·ªói nh√¢n v·∫≠t l√† m·ªôt object c√≥ "name" (string), "role" (string), "description" (string), "backstory" (string), v√† "abilities" (m·∫£ng string).
      3. "factions": m·ªôt m·∫£ng ch·ª©a 2-3 th·∫ø l·ª±c/m√¥n ph√°i ch√≠nh. M·ªói th·∫ø l·ª±c l√† m·ªôt object c√≥ "name" (string), "ideology" (string), v√† "description" (string).
      4. "realms": m·ªôt m·∫£ng ch·ª©a 5-7 c·∫£nh gi·ªõi tu luy·ªán ƒë·∫ßu ti√™n. M·ªói c·∫£nh gi·ªõi l√† m·ªôt object c√≥ "name" (string), "level" (B·∫ÆT BU·ªòC L√Ä NUMBER), v√† "description" (string).
      5. "locations": m·ªôt m·∫£ng ch·ª©a 2-3 ƒë·ªãa danh quan tr·ªçng. M·ªói ƒë·ªãa danh l√† m·ªôt object c√≥ "name" (string), "description" (string), v√† "keyFeatures" (string, c√°c ƒë·∫∑c ƒëi·ªÉm n·ªëi v·ªõi nhau b·∫±ng d·∫•u ph·∫©y).
      </NHI·ªÜM_V·ª§>

      <V√ç_D·ª§_ƒê·ªäNH_D·∫†NG_JSON>
      {
        "story": {
          "title": "V√≠ d·ª• T√™n Truy·ªán",
          "description": "ƒê√¢y l√† m√¥ t·∫£ v√≠ d·ª•.",
          "tags": ["h√†nh ƒë·ªông", "phi√™u l∆∞u"],
          "genres": ["Huy·ªÅn Huy·ªÖn"]
        },
        "characters": [
          {
            "name": "Nh√¢n v·∫≠t A",
            "role": "Ch√≠nh",
            "description": "M√¥ t·∫£ ng·∫Øn g·ªçn.",
            "backstory": "Ngu·ªìn g·ªëc c·ªßa nh√¢n v·∫≠t.",
            "abilities": ["NƒÉng l·ª±c 1", "NƒÉng l·ª±c 2"]
          }
        ],
        "factions": [],
        "realms": [
          {
            "name": "Luy·ªán Kh√≠ K·ª≥",
            "level": 1,
            "description": "C·∫£nh gi·ªõi ƒë·∫ßu ti√™n."
          }
        ],
        "locations": []
      }
      </V√ç_D·ª§_ƒê·ªäNH_D·∫†NG_JSON>

      <QUY_T·∫ÆC_XU·∫§T_B·∫¢N_CU·ªêI_C√ôNG>
      - Ch·ªâ tr·∫£ v·ªÅ duy nh·∫•t m·ªôt kh·ªëi m√£ JSON.
      - KH√îNG BAO GI·ªú ƒë∆∞·ª£c th√™m b·∫•t k·ª≥ vƒÉn b·∫£n gi·ªõi thi·ªáu, gi·∫£i th√≠ch n√†o tr∆∞·ªõc ho·∫∑c sau kh·ªëi JSON.
      - KH√îNG BAO GI·ªú ƒë∆∞·ª£c bao b·ªçc JSON trong markdown (v√≠ d·ª•: \`\`\`json ... \`\`\`).
      - ƒê·∫£m b·∫£o JSON l√† h·ª£p l·ªá 100% v√† c√≥ th·ªÉ ƒë∆∞·ª£c ph√¢n t√≠ch c√∫ ph√°p (parse) tr·ª±c ti·∫øp.
      </QUY_T·∫ÆC_XU·∫§T_B·∫¢N_CU·ªêI_C√ôNG>
    `

  return metaPrompt
}

async function createSceneGenerationPrompt(job): Promise<string> {
  const { storyId, currentContent, settings } = job.context
  const userPrompt = job.prompt

  const [ragContext, lorebookContext, story] = await Promise.all([
    retrieveSimilarContext(storyId, userPrompt),
    retrieveLorebookContext(storyId, userPrompt),
    Story.findById(storyId).select('summary')
  ])
  const storySummary = story?.summary || 'Kh√¥ng c√≥ t√≥m t·∫Øt.'

  const plainTextCurrentContent = convert(currentContent || '', {
    wordwrap: false,
    selectors: [{ selector: 'p', options: { itemPrefix: ' ' } }]
  }).trim()

  return `
    QUAN TR·ªåNG: H√ÉY VI·∫æT C√ÇU TR·∫¢ L·ªúI HO√ÄN TO√ÄN B·∫∞NG TI·∫æNG VI·ªÜT.
    B·∫°n l√† m·ªôt ti·ªÉu thuy·∫øt gia chuy√™n nghi·ªáp v·ªõi b√∫t ph√°p m·∫°ch l·∫°c, vƒÉn phong trong s√°ng, chuy√™n vi·∫øt cho c√°c n·ªÅn t·∫£ng ƒë·ªçc truy·ªán online.

    **NHI·ªÜM V·ª§:**
    D·ª±a v√†o c√°c quy t·∫Øc v√† b·ªëi c·∫£nh ƒë∆∞·ª£c cung c·∫•p, h√£y vi·∫øt ph·∫ßn ti·∫øp theo cho c√¢u chuy·ªán m·ªôt c√°ch t·ª± nhi√™n v√† h·∫•p d·∫´n nh·∫•t.

    ---
    ### **QUY T·∫ÆC V√Ä PHONG C√ÅCH S√ÅNG T√ÅC (B·∫ÆT BU·ªòC TU√ÇN TH·ª¶)**

    ‚úçÔ∏è **Phong c√°ch vi·∫øt:** ${settings.writingStyle}
    üé≠ **Gi·ªçng ƒëi·ªáu (Tone):** ${settings.tone}
    üéØ **ƒê·ªô d√†i m·ª•c ti√™u:** Vi·∫øt ƒëo·∫°n ti·∫øp theo c√≥ ƒë·ªô d√†i ph√π h·ª£p, h∆∞·ªõng t·ªõi m·ª•c ti√™u kho·∫£ng **${settings.wordsPerChapter} t·ª´/ch∆∞∆°ng**.
    // ... (c√°c quy t·∫Øc kh√°c gi·ªØ nguy√™n) ...
    üîó **C·∫•u tr√∫c & Li√™n k·∫øt:** Tu√¢n th·ªß c·∫•u tr√∫c **${settings.writingStructure}**. L∆∞u √Ω v·ªÅ ƒë·ªô s√¢u tham chi·∫øu (${settings.memoryDepth}/10), c·∫ßn ƒë·∫£m b·∫£o c√°c chi ti·∫øt v√† s·ª± ki·ªán c√≥ s·ª± li√™n k·∫øt ch·∫∑t ch·∫Ω, tr√°nh m√¢u thu·∫´n.

    üìñ **(M·ªöI) ƒê·ªãnh d·∫°ng:** Tr√¨nh b√†y nh∆∞ m·ªôt t√°c ph·∫©m vƒÉn h·ªçc th·ª±c th·ª•. T·ª± ƒë·ªông ng·∫Øt d√≤ng v√† xu·ªëng d√≤ng ƒë·ªÉ t·∫°o c√°c ƒëo·∫°n vƒÉn (paragraphs) r√µ r√†ng, m·∫°ch l·∫°c. M·ªói ƒëo·∫°n vƒÉn n√™n t·∫≠p trung v√†o m·ªôt √Ω ho·∫∑c m·ªôt c·∫£nh nh·ªè.

     ---
    ### **B·ªêI C·∫¢NH ƒê·ªÇ B·∫†N S√ÅNG T√ÅC**

    **1. Kim ch·ªâ nam (T√≥m t·∫Øt c·ªët truy·ªán ch√≠nh):**
    ${storySummary}

    **2. Th√¥ng tin Lorebook (C√°c th·ª±c th·ªÉ li√™n quan):**
    ${lorebookContext}

    **3. Ng·ªØ c·∫£nh t·ª´ c√°c ch∆∞∆°ng tr∆∞·ªõc (RAG):**
    ${ragContext}

    **4. V√†i d√≤ng cu·ªëi c·ªßa n·ªôi dung ƒëang vi·∫øt:**
    ...${plainTextCurrentContent.slice(-1500)}

    **5. Y√™u c·∫ßu c·ªßa t√°c gi·∫£ cho c·∫£nh n√†y:**
    "${userPrompt}"
    ---

    ### **(M·ªöI) V√ç D·ª§ V·ªÄ ƒê·ªäNH D·∫†NG MONG MU·ªêN**

    Gi√≥ ƒë√™m th·ªïi qua khu r·ª´ng, mang theo h∆°i l·∫°nh ·∫©m ∆∞·ªõt. Ti·∫øng x√†o x·∫°c c·ªßa l√° c√¢y kh√¥ d∆∞·ªõi ch√¢n l√† √¢m thanh duy nh·∫•t ph√° v·ª° s·ª± tƒ©nh l·∫∑ng ƒë·∫øn r·ª£n ng∆∞·ªùi.

    B·∫•t ch·ª£t, m·ªôt ti·∫øng ƒë·ªông l·∫° vang l√™n t·ª´ ph√≠a tr∆∞·ªõc. Kh√¥ng ph·∫£i ti·∫øng th√∫ r·ª´ng, c≈©ng kh√¥ng ph·∫£i ti·∫øng gi√≥. N√≥ gi·ªëng nh∆∞ ti·∫øng kim lo·∫°i va v√†o ƒë√°, ng·∫Øn v√† s·∫Øc.

    ---
    üìù Y√äU C·∫¶U CU·ªêI C√ôNG (C·ª∞C K·ª≤ QUAN TR·ªåNG)

    "B·∫Øt ƒë·∫ßu vi·∫øt ngay l·∫≠p t·ª©c...": M·ªánh l·ªánh n√†y y√™u c·∫ßu AI b·ªè qua m·ªçi b∆∞·ªõc ƒë·ªám v√† ƒëi th·∫≥ng v√†o vi·ªác s√°ng t√°c.

    "Ch·ªâ tr·∫£ v·ªÅ N·ªòI DUNG c·ªßa c√¢u chuy·ªán.": Y√™u c·∫ßu n√†y x√°c ƒë·ªãnh r√µ ph·∫°m vi c·ªßa k·∫øt qu·∫£ tr·∫£ v·ªÅ.

    "TUY·ªÜT ƒê·ªêI KH√îNG vi·∫øt l·ªùi d·∫´n, l·ªùi b√¨nh, hay b·∫•t k·ª≥ c√¢u n√†o kh√¥ng thu·ªôc v·ªÅ c√¢u chuy·ªán...": ƒê√¢y l√† r√†ng bu·ªôc c·∫•m ƒëo√°n tr·ª±c ti·∫øp, s·ª≠ d·ª•ng t·ª´ kh√≥a m·∫°nh "TUY·ªÜT ƒê·ªêI KH√îNG" ƒë·ªÉ ngƒÉn AI th√™m v√†o c√°c c√¢u b√¨nh lu·∫≠n nh∆∞ b·∫°n ƒë√£ th·∫•y.

    Tr·∫£ v·ªÅ ƒë√∫ng ƒë·ªãnh d·∫°ng HTML cho n·ªôi dung, kh√¥ng th√™m th·∫ª markdown hay b·∫•t k·ª≥ ƒë·ªãnh d·∫°ng n√†o kh√°c. Nh∆∞ m·ªôt t√°c ph·∫©m vƒÉn h·ªçc th·ª±c th·ª•, h√£y ng·∫Øt d√≤ng v√† xu·ªëng d√≤ng ƒë·ªÉ t·∫°o c√°c ƒëo·∫°n vƒÉn (paragraphs) r√µ r√†ng, m·∫°ch l·∫°c.

    H√£y tu√¢n th·ªß nghi√™m ng·∫∑t c√°c quy t·∫Øc v√† b·ªëi c·∫£nh ƒë√£ cho ƒë·ªÉ t·∫°o ra m·ªôt ƒëo·∫°n vƒÉn h·∫•p d·∫´n, m·∫°ch l·∫°c, v√† ph√π h·ª£p v·ªõi phong c√°ch c·ªßa c√¢u chuy·ªán.
    `
}

export async function getMetaPrompt(job): Promise<string> {
  switch (job.jobType) {
    case 'generate_story_details':
      return await createStoryDetailsPrompt(job)
    case 'generate_scene':
      // (C·∫¨P NH·∫¨T) K√≠ch ho·∫°t l·∫°i
      return await createSceneGenerationPrompt(job)
    case 'generate_outline':
    return await createChapterOutlinePrompt(job)
    default:
      throw new Error(`Unknown job type: ${job.jobType}`)
  }
}
